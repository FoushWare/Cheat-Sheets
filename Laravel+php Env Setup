## spin container for mysql with Docker
```
docker run --name ms2 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=password mysql  --default-authentication-plugin=mysql_native_password

```
ms : image name i named it so i can call it easy instead of it's hash
30306:3306 => port mapping in my machine and docker container 
-e => for env varaiables 
mysql => the image of mysql

## bash into the container 
```
docker exec -it ms bash
```
## use mysql after bash into the container 

```
mysql -u root -ppassword
```
## create database 
```
create database test_development;
```
### dumb sql database to ms container
```
docker exec -i ms mysql -uroot -ppassword test_development < test.db.sql 
```

### php version

install php 5
```
$ sudo add-apt-repository -y ppa:ondrej/php
$ sudo apt update
$ sudo apt install php5.6
```

switch to php versions 

```
sudo update-alternatives --config php
```

## install composer

```
sudo apt install php-cli unzip
cd ~
curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php
HASH=`curl -sS https://composer.github.io/installer.sig`
php -r "if (hash_file('SHA384', '/tmp/composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

composer
```

### Errors when composer install 
Error
```
To enable extensions, verify that they are enabled in those .ini files - Vagrant/Ubuntu/Magento 2.0.2

```
sol: 
```
When I went to create a laravel project, I got this problem.

After googling, I got this solution.

I followed these steps:

Step 1: sudo apt-get install -y php7.2-gd

Step 2: sudo apt-get install php7.2-intl

Step 3: sudo apt-get install php7.2-xsl

Step 4: sudo apt-get install php7.2-mbstring

```






